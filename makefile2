PROJECT := TestProj
TopDir	:= $(shell pwd)
OutDir	:= Build

objs 	:= main.o C_Test.o Cpp_Test.o Fpt_Test.o

VPATH := $(TopDir) $(TopDir)/$(OutDir)
.SUFFIXES: .a .txt .inf

.PHONY: all createdir clean

all: createdir $(OutDir)/$(PROJECT).a $(OutDir)/$(PROJECT).txt $(OutDir)/$(PROJECT).inf

# notice this should be after target "all".
# this is because we want "all" be our default (1st) target.
deplist := $(wildcard *.d)
ifneq ($(deplist),)
-include $(deplist)
endif

createdir: 
	[ -d $(OutDir) ] || echo '  MD      $(OutDir)' &&	mkdir -p $(OutDir)

# About the option "-MMD -MF $@.d" when invoking gcc : 
#   not only compile but also let CPP create dependence file *.o.d to 
#   describe user header files included so that we can make it our dependence also.

%.o:%.c
	gcc -c $< -g -o $@ -MMD -MF $@.d
	
%.o:%.cpp
	gcc -c $< -g -o $@ -MMD -MF $@.d

$(OutDir)/$(PROJECT).a: $(objs) makefile1
	gcc $(objs) -lstdc++ -o $@
	chmod +x $@

%.inf:%.a
	readelf -a $< > $*.inf

%.txt:%.a
	objdump -x -S $< > $*.txt
	
clean: 
	-rm -rf $(OutDir)
	-rm *.o *.d *.inf *.txt
	echo "Deleted dir : $(OutDir) and obj files"

